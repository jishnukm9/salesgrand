# Generated by Django 4.2.2 on 2024-02-20 04:37

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('phone', models.IntegerField(blank=True, default=None, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('branchtype', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('branchcategory', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('gstin', models.CharField(blank=True, default=None, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brand_branch', to='core.branch')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='CashBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=200)),
                ('payment', models.FloatField()),
                ('receipt', models.FloatField()),
                ('mode', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('description', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Catagories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='categories_branch', to='core.branch')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='CoASubAccounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('head_root', models.CharField(max_length=200)),
                ('title', models.CharField(max_length=200)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(default=None, max_length=5000000, null=True, unique=True)),
                ('company_name', models.CharField(max_length=200)),
                ('address_line1', models.CharField(max_length=200)),
                ('address_line2', models.CharField(max_length=200)),
                ('address_line3', models.CharField(max_length=200)),
                ('logo_url', models.URLField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('calling_code', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerBookingRepair',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('brand', models.CharField(max_length=50)),
                ('issue', models.CharField(max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(default=None, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('refernceno', models.CharField(max_length=200)),
                ('narration', models.CharField(max_length=200)),
                ('account_type', models.CharField(max_length=200)),
                ('account_head', models.CharField(max_length=200)),
                ('account_subhead', models.CharField(max_length=200)),
                ('debit_amount', models.FloatField()),
                ('credit_amount', models.FloatField()),
                ('customer_or_vendor', models.CharField(max_length=200)),
                ('branch', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Packing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='packing_branch', to='core.branch')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='PhoneBrand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='PhoneModal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modals', to='core.phonebrand')),
            ],
            options={
                'unique_together': {('brand', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('HSN', models.CharField(max_length=200)),
                ('price', models.FloatField(blank=True, default=None, null=True)),
                ('sellingprice', models.FloatField(blank=True, default=None, null=True)),
                ('mrp', models.FloatField(blank=True, default=None, null=True)),
                ('mop', models.FloatField(blank=True, default=None, null=True)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='products_branch', to='core.branch')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.brand')),
                ('catagory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.catagories')),
                ('packing', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.packing')),
            ],
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicerefnumber', models.CharField(max_length=200)),
                ('customerid', models.CharField(blank=True, max_length=200, null=True)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('memodate', models.DateField(blank=True, null=True)),
                ('expecteddate', models.DateField(blank=True, null=True)),
                ('product', models.CharField(blank=True, max_length=200, null=True)),
                ('brand', models.CharField(blank=True, max_length=200, null=True)),
                ('model', models.CharField(blank=True, max_length=200, null=True)),
                ('imei', models.CharField(blank=True, max_length=200, null=True)),
                ('servicecharge', models.FloatField(blank=True, null=True)),
                ('problem', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=200, null=True)),
                ('warrenty', models.CharField(blank=True, max_length=200, null=True)),
                ('totalamount', models.FloatField(blank=True, null=True)),
                ('totaltax', models.FloatField(blank=True, null=True)),
                ('discount', models.FloatField(blank=True, null=True)),
                ('finalamount', models.FloatField(blank=True, null=True)),
                ('amountrecieved', models.FloatField(blank=True, null=True)),
                ('duebalance', models.FloatField(blank=True, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('modifieddate', models.DateField(auto_now_add=True)),
                ('accessories', models.CharField(blank=True, max_length=200, null=True)),
                ('paymentmode', models.CharField(blank=True, max_length=50, null=True)),
                ('image1', models.URLField(blank=True, default=None, null=True)),
                ('image2', models.URLField(blank=True, default=None, null=True)),
                ('image3', models.URLField(blank=True, default=None, null=True)),
                ('image4', models.URLField(blank=True, default=None, null=True)),
                ('image5', models.URLField(blank=True, default=None, null=True)),
                ('image6', models.URLField(blank=True, default=None, null=True)),
                ('rack_no', models.CharField(blank=True, max_length=200, null=True)),
                ('shedule_call', models.DateTimeField(blank=True, default=None, null=True)),
                ('reject_code', models.CharField(default=None, max_length=50, null=True)),
                ('technician_remark', models.TextField(default=None, null=True)),
                ('qcok', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('qcnotok', models.CharField(blank=True, default=None, max_length=2000, null=True)),
                ('qcremark', models.TextField(blank=True, default=None, null=True)),
                ('entry_type', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('entry_validated', models.BooleanField(default=True)),
                ('barcode_number', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
                ('cnp', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_cnp', to=settings.AUTH_USER_MODEL)),
                ('entry_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_entries', to=settings.AUTH_USER_MODEL)),
                ('frontdesk', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_frontdesk', to=settings.AUTH_USER_MODEL)),
                ('qc', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service_qc', to=settings.AUTH_USER_MODEL)),
                ('technician', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='service', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceIssues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('code', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SidebarStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UniqueIdGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=200, unique=True)),
                ('prefix', models.CharField(max_length=200, unique=True)),
                ('uniqueid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(default=None, max_length=200)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('permissions', models.CharField(default=None, max_length=1000, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branch', to='core.branch')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.company')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='type', to='core.branch')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionid', models.CharField(blank=True, max_length=200, null=True)),
                ('paymentmode', models.CharField(blank=True, max_length=200, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('amount', models.FloatField(blank=True, default=None, null=True)),
                ('transactiontype', models.CharField(max_length=50)),
                ('invoice_number', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('accounts', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('remarks', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('percentage', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tax_branch', to='core.branch')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('contact', models.IntegerField(blank=True, default=None, null=True)),
                ('address', models.TextField(blank=True, default=None, null=True)),
                ('gst', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branch_suppliers', to='core.branch')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='SubCatagories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sub_categories_branch', to='core.branch')),
                ('catagory', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.catagories')),
            ],
            options={
                'unique_together': {('name', 'branch')},
            },
        ),
        migrations.CreateModel(
            name='StockTransferList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('status', models.CharField(max_length=50)),
                ('createddate', models.DateTimeField(auto_now_add=True)),
                ('frombranch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frombranch', to='core.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stocktransferproduct', to='core.products')),
                ('tobranch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tobranch', to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('purchaserate', models.FloatField(blank=True, default=None, null=True)),
                ('salerate', models.FloatField(blank=True, default=None, null=True)),
                ('stockvalue', models.FloatField(blank=True, default=None, null=True)),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.products')),
            ],
        ),
        migrations.CreateModel(
            name='SpareRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('service_created_date', models.DateTimeField()),
                ('service_estimated_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('requested_qty', models.IntegerField()),
                ('barcodenumber', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('price', models.FloatField(blank=True, default=None, null=True)),
                ('mrp', models.FloatField(blank=True, default=None, null=True)),
                ('mop', models.FloatField(blank=True, default=None, null=True)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spare_requests', to=settings.AUTH_USER_MODEL)),
                ('salegst', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sparerequest', to='core.tax')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_spares', to='core.service')),
                ('spare', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.products')),
            ],
        ),
        migrations.CreateModel(
            name='SpareParts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicerefnumber', models.CharField(blank=True, max_length=200, null=True)),
                ('customerid', models.CharField(blank=True, max_length=200, null=True)),
                ('barcodenumber', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('totalquantity', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(blank=True, null=True)),
                ('mrp', models.FloatField(blank=True, null=True)),
                ('mop', models.FloatField(blank=True, null=True)),
                ('salegst', models.CharField(blank=True, max_length=200, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('paymentmode', models.CharField(blank=True, max_length=50, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.products')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceInformations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('info', models.CharField(max_length=2000, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_info', to='core.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_info', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=10000, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_history', to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceChat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_message', models.TextField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_chat', to='core.service')),
                ('user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceChargeRequests',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, default=None, max_length=50, null=True)),
                ('charge', models.FloatField()),
                ('requested_by', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_charge_requests', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_service_charge', to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCallLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('remark', models.CharField(max_length=1000, null=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='call_logs', to='core.service')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduleCallNotifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(default=None, null=True)),
                ('serviceref', models.CharField(max_length=200, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('notification_type', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=200)),
                ('shedule_call', models.DateTimeField(blank=True, null=True)),
                ('seen', models.BooleanField(default=False)),
                ('sent', models.BooleanField(default=False)),
                ('service', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='schedule_call_notifications', to='core.service')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SaleReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salereturnid', models.CharField(max_length=200)),
                ('invoicenumber', models.CharField(max_length=200)),
                ('barcode', models.CharField(max_length=200)),
                ('customer', models.CharField(max_length=200)),
                ('paymentmode', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('customerid', models.CharField(blank=True, max_length=200, null=True)),
                ('customertype', models.CharField(blank=True, max_length=200, null=True)),
                ('returnquantity', models.IntegerField()),
                ('rate', models.FloatField()),
                ('refundamount', models.FloatField()),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('totalamount', models.FloatField()),
                ('discount', models.FloatField()),
                ('nettotal', models.FloatField()),
                ('totaltax', models.FloatField()),
                ('totalquantity', models.IntegerField()),
                ('createddate', models.DateField(auto_now_add=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='salereturnbranch', to='core.branch')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productnamesalereturn', to='core.products')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='saleproductreturntax', to='core.tax')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentmode', models.CharField(blank=True, max_length=200, null=True)),
                ('customer', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('customerid', models.IntegerField(blank=True, default=None, null=True)),
                ('customertype', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('invoicenumber', models.CharField(max_length=200)),
                ('invoicedate', models.DateField(blank=True, default=datetime.datetime.now)),
                ('barcodenumber', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('totalquantity', models.IntegerField()),
                ('price', models.FloatField()),
                ('salegst', models.CharField(max_length=200)),
                ('saleid', models.CharField(blank=True, max_length=200, null=True)),
                ('totalamount', models.FloatField(blank=True, default=None, null=True)),
                ('totaltax', models.FloatField(blank=True, default=None, null=True)),
                ('totalbillingamount', models.FloatField(blank=True, default=None, null=True)),
                ('amountrecieved', models.FloatField(blank=True, default=None, null=True)),
                ('duebalance', models.FloatField(blank=True, default=None, null=True)),
                ('discount', models.IntegerField(blank=True, default=None, null=True)),
                ('discountmethod', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('mrp', models.FloatField(blank=True, null=True)),
                ('mop', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=50, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='saleproductname', to='core.products')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseReturn',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchasereturnid', models.CharField(max_length=200)),
                ('invoicenumber', models.CharField(max_length=200)),
                ('returnquantity', models.IntegerField()),
                ('rate', models.FloatField()),
                ('refundamount', models.FloatField()),
                ('reason', models.CharField(blank=True, max_length=200, null=True)),
                ('totalamount', models.FloatField()),
                ('paymentmode', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('adjustment', models.FloatField()),
                ('nettotal', models.FloatField()),
                ('totaltax', models.FloatField()),
                ('totalquantity', models.IntegerField()),
                ('createddate', models.DateField(auto_now_add=True)),
                ('status', models.CharField(max_length=200)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='purchasereturnbranch', to='core.branch')),
                ('externalsupplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchasereturnsupplier', to='core.suppliers')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productnamepurchasereturn', to='core.products')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='purchasereturnsupplier', to='core.branch')),
                ('tax', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productreturntax', to='core.tax')),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchaseid', models.IntegerField()),
                ('invoicenumber', models.CharField(max_length=200)),
                ('invoicedate', models.DateField(blank=True, default=datetime.datetime.now)),
                ('supplier', models.CharField(max_length=200)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('totalamount', models.FloatField(blank=True, default=None, null=True)),
                ('totalbillingamount', models.FloatField(blank=True, default=None, null=True)),
                ('amountrecieved', models.FloatField(blank=True, default=None, null=True)),
                ('duebalance', models.FloatField(blank=True, default=None, null=True)),
                ('discount', models.IntegerField(blank=True, default=None, null=True)),
                ('discountmethod', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentmode', models.CharField(blank=True, max_length=200, null=True)),
                ('invoicenumber', models.CharField(max_length=200)),
                ('invoicedate', models.DateField(blank=True, default=datetime.datetime.now)),
                ('barcodenumber', models.CharField(blank=True, default=None, max_length=200, null=True, unique=True)),
                ('totalquantity', models.IntegerField()),
                ('price', models.FloatField()),
                ('sellingprice', models.FloatField(blank=True, default=None, null=True)),
                ('purchasegst', models.CharField(max_length=200)),
                ('salegst', models.CharField(max_length=200)),
                ('purchaseid', models.CharField(blank=True, max_length=200, null=True)),
                ('totalamount', models.FloatField(blank=True, default=None, null=True)),
                ('totaltax', models.FloatField(blank=True, default=None, null=True)),
                ('totalbillingamount', models.FloatField(blank=True, default=None, null=True)),
                ('amountrecieved', models.FloatField(blank=True, default=None, null=True)),
                ('duebalance', models.FloatField(blank=True, default=None, null=True)),
                ('discount', models.IntegerField(blank=True, default=None, null=True)),
                ('discountmethod', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('mrp', models.FloatField(blank=True, default=None, null=True)),
                ('mop', models.FloatField(blank=True, default=None, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productname', to='core.products')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.suppliers')),
            ],
        ),
        migrations.AddField(
            model_name='products',
            name='purchasegst',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productpurchasegst', to='core.tax'),
        ),
        migrations.AddField(
            model_name='products',
            name='salegst',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='productsalegst', to='core.tax'),
        ),
        migrations.AddField(
            model_name='products',
            name='subcatagory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.subcatagories'),
        ),
        migrations.AddField(
            model_name='products',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.type'),
        ),
        migrations.CreateModel(
            name='ExpenseType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.expensecategory')),
            ],
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expenseid', models.CharField(blank=True, max_length=200, null=True)),
                ('expensedate', models.DateField(blank=True, default=None, max_length=200, null=True)),
                ('expensetype', models.CharField(blank=True, max_length=200, null=True)),
                ('expensecategory', models.CharField(blank=True, max_length=200, null=True)),
                ('remarks', models.CharField(blank=True, max_length=2000, null=True)),
                ('amount', models.FloatField()),
                ('billnumber', models.CharField(blank=True, max_length=200, null=True)),
                ('paymentmode', models.CharField(blank=True, max_length=200, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(default=None, max_length=5000000, null=True, unique=True)),
                ('firstname', models.CharField(max_length=200)),
                ('lastname', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=200, unique=True)),
                ('phonemodel', models.CharField(max_length=200, null=True)),
                ('purchasedate', models.DateField(blank=True, default=None, max_length=200, null=True)),
                ('address', models.TextField(null=True)),
                ('dob', models.DateField(blank=True, default=None, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('addedby', models.ForeignKey(null=None, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('branch', models.ForeignKey(null=None, on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='BroadcastNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('broadcast_on', models.DateTimeField()),
                ('sent', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('notification_type', models.CharField(default=None, max_length=50, null=True)),
                ('notification_id', models.CharField(default=None, max_length=50, null=True)),
                ('active', models.BooleanField(default=True)),
                ('seen', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='broadcast_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-broadcast_on'],
            },
        ),
        migrations.CreateModel(
            name='BranchStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('purchaserate', models.FloatField(blank=True, default=None, null=True)),
                ('salerate', models.FloatField(blank=True, default=None, null=True)),
                ('stockvalue', models.FloatField(blank=True, default=None, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.branch')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.products')),
            ],
        ),
        migrations.CreateModel(
            name='BranchPurchase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paymentmode', models.CharField(blank=True, max_length=200, null=True)),
                ('invoicenumber', models.CharField(max_length=200)),
                ('invoicedate', models.DateField(blank=True, default=datetime.datetime.now)),
                ('barcodenumber', models.CharField(blank=True, default=None, max_length=200, null=True, unique=True)),
                ('totalquantity', models.IntegerField()),
                ('price', models.FloatField()),
                ('sellingprice', models.FloatField(blank=True, default=None, null=True)),
                ('purchasegst', models.CharField(max_length=200)),
                ('salegst', models.CharField(max_length=200)),
                ('saleid', models.CharField(blank=True, max_length=200, null=True)),
                ('purchaseid', models.CharField(blank=True, max_length=200, null=True)),
                ('totalamount', models.FloatField(blank=True, default=None, null=True)),
                ('totaltax', models.FloatField(blank=True, default=None, null=True)),
                ('totalbillingamount', models.FloatField(blank=True, default=None, null=True)),
                ('amountrecieved', models.FloatField(blank=True, default=None, null=True)),
                ('duebalance', models.FloatField(blank=True, default=None, null=True)),
                ('discount', models.IntegerField(blank=True, default=None, null=True)),
                ('discountmethod', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('createddate', models.DateField(auto_now_add=True)),
                ('mrp', models.FloatField(blank=True, default=None, null=True)),
                ('mop', models.FloatField(blank=True, default=None, null=True)),
                ('status', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='branches', to='core.branch')),
                ('externalsupplier', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='external_suppliers', to='core.suppliers')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='branchproductname', to='core.products')),
                ('supplier', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='suppliers', to='core.branch')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceCharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charge', models.FloatField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.phonebrand')),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.serviceissues')),
                ('modal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.phonemodal')),
            ],
            options={
                'unique_together': {('brand', 'modal', 'issue')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='products',
            unique_together={('name', 'branch')},
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cities', to='core.country')),
            ],
            options={
                'unique_together': {('country', 'name')},
            },
        ),
    ]
